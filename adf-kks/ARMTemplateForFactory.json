{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-kks"
		},
		"ls_adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls'"
		},
		"ls_git_adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_git_adls'"
		},
		"ls_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlskks.dfs.core.windows.net/"
		},
		"ls_git_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlskks.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_orders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessOrders",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_orders",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AllOrders": {},
									"OrderDetails": {},
									"ElectronicsSink": {},
									"FurnitureSink": {},
									"Clothingsink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-04T06:41:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_world_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyWorldData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Check if File Exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.filename}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adls_world_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_world_data_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SendSucessEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyWorldData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://sendemailkks.azurewebsites.net:443/api/SuccessEmail/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=A7CEOSliJJkfvlRN4FPoNHT5i9ucKo9c6UaVT293_aM",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"title\":\"Copy Activity Succeeded\",\n    \"pipelinename\": \"@{pipeline().Pipeline}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check if File Exists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adls_world_data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:10",
							"sleep": 10
						}
					},
					{
						"name": "GetDataFromGithub",
						"type": "WebActivity",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://github.com/KrishnaSaiKKS/adf-kks/blob/main/world-data-2023.csv",
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "CheckFileEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Check if File Exists",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://sendemailkks.azurewebsites.net:443/api/failureEmail/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=vZ6cSUAcqzNb94cr8zT94pdcMyRzyLlQ85GwXlUC6sU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"title\":\"Check Source File\",\n    \"datafactoryname\": \"@{pipeline().DataFactory}\",\n    \"pipelineRunId\": \"@{pipeline().RunId}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-04T06:41:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_world_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_world_data_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_all_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "All Orders.csv",
						"fileSystem": "orders"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "CustomerName",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_order_details')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Order Details.csv",
						"fileSystem": "orders"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_world_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "world-data-2023.csv",
						"fileSystem": "worlddata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_world_data_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "worlddata.csv",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_Clothing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "B-25601",
						"type": "String"
					},
					{
						"name": "2018-04-01",
						"type": "String"
					},
					{
						"name": "Bharat",
						"type": "String"
					},
					{
						"name": "Gujarat",
						"type": "String"
					},
					{
						"name": "Ahmedabad",
						"type": "String"
					},
					{
						"name": "80.0",
						"type": "String"
					},
					{
						"name": "-56.0",
						"type": "String"
					},
					{
						"name": "4",
						"type": "String"
					},
					{
						"name": "Electronics",
						"type": "String"
					},
					{
						"name": "Electronic Games",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_Electronics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_Furniture')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_git_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_git_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_git_adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_orders')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adls_all_orders",
								"type": "DatasetReference"
							},
							"name": "AllOrders"
						},
						{
							"dataset": {
								"referenceName": "ds_adls_order_details",
								"type": "DatasetReference"
							},
							"name": "OrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_Electronics",
								"type": "DatasetReference"
							},
							"name": "ElectronicsSink",
							"rejectedDataLinkedService": {
								"referenceName": "ls_adls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "ds_processed_Furniture",
								"type": "DatasetReference"
							},
							"name": "FurnitureSink",
							"rejectedDataLinkedService": {
								"referenceName": "ls_adls",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "ds_processed_Clothing",
								"type": "DatasetReference"
							},
							"name": "Clothingsink",
							"rejectedDataLinkedService": {
								"referenceName": "ls_adls",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "SourceJoins"
						},
						{
							"name": "SeperateElectronics"
						},
						{
							"name": "selectRequiredColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Order ID} as string,",
						"          {Order Date} as date 'dd-MM-yyyy',",
						"          CustomerName as string,",
						"          State as string,",
						"          City as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> AllOrders",
						"source(output(",
						"          {Order ID} as string,",
						"          Amount as double,",
						"          Profit as double,",
						"          Quantity as short,",
						"          Category as string,",
						"          {Sub-Category} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> OrderDetails",
						"AllOrders, OrderDetails join(AllOrders@{Order ID} == OrderDetails@{Order ID},",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> SourceJoins",
						"selectRequiredColumns split(Category == \"Electronics\",",
						"     Category == \"Furniture\",",
						"     Category ==\"Clothing\",",
						"     disjoint: true) ~> SeperateElectronics@(ElectronicsStream, FurnitureStream, ClothingStream)",
						"SourceJoins select(mapColumn(",
						"          {Order ID} = AllOrders@{Order ID},",
						"          {Order Date},",
						"          CustomerName,",
						"          State,",
						"          City,",
						"          Amount,",
						"          Profit,",
						"          Quantity,",
						"          Category,",
						"          {Sub-Category}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectRequiredColumns",
						"SeperateElectronics@ElectronicsStream sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Electronicsfile.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          {Order ID},",
						"          {Order Date},",
						"          CustomerName,",
						"          State,",
						"          City,",
						"          Amount,",
						"          Profit,",
						"          Quantity,",
						"          Category,",
						"          {Sub-Category}",
						"     ),",
						"     partitionBy('hash', 1)) ~> ElectronicsSink",
						"SeperateElectronics@FurnitureStream sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Furniture.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> FurnitureSink",
						"SeperateElectronics@ClothingStream sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {B-25601} as string,",
						"          {2018-04-01} as string,",
						"          Bharat as string,",
						"          Gujarat as string,",
						"          Ahmedabad as string,",
						"          {80.0} as string,",
						"          {-56.0} as string,",
						"          {4} as string,",
						"          Electronics as string,",
						"          {Electronic Games} as string",
						"     ),",
						"     partitionFileNames:['Clothing.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> Clothingsink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_all_orders')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_order_details')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_Electronics')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_Furniture')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_Clothing')]"
			]
		}
	]
}